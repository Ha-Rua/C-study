#include <iostream>
#include <queue>
using namespace std;
int visited[1000001];
void BFS(int a, int b);
int main()
{
    int n, m; cin >> n >> m;
    BFS(n, m);
    return 0;
}
void BFS(int a, int b)
{
    queue<int> q;
    q.push(a);
    visited[a] = 1;
    while (!q.empty())
    {
        int temp = q.front();
        q.pop();
        if(visited[temp + 1] == 0)
        {
            q.push(temp + 1);
            visited[temp + 1] = visited[temp] + 1;
        }
        if(visited[temp - 1] == 0)
        {
            q.push(temp - 1);
            visited[temp - 1] = visited[temp] + 1;
        }
        if (temp * 2 <= 1000001)
        {
            if(visited[temp * 2] == 0)
            {
                q.push(temp * 2);
                visited[temp * 2] = visited[temp] + 1;
            }
        }
        if(temp == b)
        {
            cout << visited[temp] - 1;
            return;
        }
    }
}
