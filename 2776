#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
int binarySearch(vector<long long int>& arr, int target, int start, int end) {
    while (start <= end) {
        int mid = (start + end) / 2;
        if (arr[mid] == target) return mid;
        else if (arr[mid] > target) end = mid - 1;
        else start = mid + 1; 
    }
    return -1;
}

int main() {
    int t; cin >> t;
    while (t--) {
        int n, m;
        vector<long long int> arr;
        vector<long long int> targets;
        cin >> n;
        for (int i = 0; i < n; i++) {
            long long int x;
            cin >> x;
            arr.push_back(x);
        }
        sort(arr.begin(), arr.end());
        cin >> m;
        for (int i = 0; i < m; i++) {
            long long int t;
            cin >> t;
            targets.push_back(t);
        }
        for (int i = 0; i < m; i++) {
            int result = binarySearch(arr, targets[i], 0, n - 1);
            if (result != -1) {
                cout << "1" << '\n';
            }
            else {
                cout << "0" << '\n';
            }
        }
    }
}
