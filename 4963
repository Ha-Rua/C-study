#include <iostream>
#include <cstring>
using namespace std;
void DFS(int a, int b);
int graph[51][51];
int n, m;
int main()
{
    while (true)
    {
        cin >> n >> m;
        if (n == 0 && m == 0) break;
        for (int i = 0; i < m; i++)
        {
            for (int j = 0; j < n; j++)
                cin >> graph[i][j];
        }
        int res = 0;
        for (int i = 0; i < m; i++)
        {
            for (int j = 0; j < n; j++)
            {
                if (graph[i][j] == 1)
                {
                    DFS(i, j);
                    res++;
                }
            }
        }
        cout << res << '\n';
        memset(graph, 0, sizeof(graph));
    }
    return 0;
}
void DFS(int a, int b)
{
    if (a < 0 || a >= m || b < 0 || b >= n) return;
    if (graph[a][b] == 1)
    {
        graph[a][b] = 0;
        DFS(a - 1, b);
        DFS(a + 1, b);
        DFS(a, b - 1);
        DFS(a, b + 1);
        DFS(a - 1, b - 1);
        DFS(a - 1, b + 1);
        DFS(a + 1, b - 1);
        DFS(a + 1, b + 1);
    }
    return;
}
