#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
int main()
{
    int n; cin >> n;
    vector<int> a[501];
    vector<int> dp[501];
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j <= i; j++)
        {
            int x; cin >> x;
            a[i].push_back(x);
        }
    }
    dp[0].push_back(a[0][0]);
    for (int i = 1; i < n; i++)
    {
        for (int j = 0; j <= i; j++)
        {
            if (j == 0) dp[i].push_back(dp[i - 1][0] + a[i][0]);
            else if (j == i) dp[i].push_back(dp[i - 1][j - 1] + a[i][j]);
            else dp[i].push_back(max(dp[i - 1][j] + a[i][j], dp[i - 1][j - 1] + a[i][j]));
        }
    }
    cout << *max_element(dp[n - 1].begin(), dp[n - 1].end());
    return 0;
}
