#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;
int bin_search(vector<int>& v, int target, int begin, int end) {
    while (begin <= end) {
        int mid = (begin + end) / 2;
        if (v[mid] == target) {
            return mid;
        } else if (v[mid] < target) {
            begin = mid + 1;
        } else {
            end = mid - 1;
        }
    }
    return -1;
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    int n, m; cin >> n >> m;
    vector<int> a, b;
    for (int i = 0; i < n; i++)
    {
        int x; cin >> x;
        a.push_back(x);
    }
    for (int i = 0; i < m; i++)
    {
        int x; cin >> x;
        b.push_back(x);
    }
    sort(b.begin(), b.end());
    vector<int> result;
    for (int i = 0; i < n; i++){
        int res = bin_search(b, a[i], 0, m - 1);
        if (res == -1)
            result.push_back(a[i]);
    }
    int s = result.size();
    cout << s << '\n';
    if (s > 0)
    {
        sort(result.begin(), result.end());
        for (int i = 0; i < s; i++)
            cout << result[i] << ' ';
    }
    return 0;
}
