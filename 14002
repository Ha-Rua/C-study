#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
int main()
{
    int n; cin >> n;
    vector<int> s(n);
    for (int i = 0; i < n; i++) cin >> s[i];
    vector<int> dp(n, 1);
    for (int i = 1; i < n; i++)
    {
        for (int j = i - 1; j >= 0; j--)
        {
            if (s[i] > s[j]) dp[i] = max(dp[i], dp[j] + 1);
        }
    }
    int d = *max_element(dp.begin(), dp.end());
    cout << d << '\n';
    cout << '\n';
    vector<int> res;
    int start;
    for (int i = 0; i < n; i++)
    {
        if(dp[i] == d)
        {
            start = i;
            break;
        }
    }
    res.push_back(s[start]);
    int cur = start;
    for (int i = start - 1; i >= 0; i--)
    {
        if (s[i] < s[cur] && dp[i] == dp[cur] - 1)
        {
            res.push_back(s[i]);
            cur = i;
        }
    }
    for (int i = res.size() - 1; i >= 0; i--) cout << res[i] << ' ';
    return 0;
}
